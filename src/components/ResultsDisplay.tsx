import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Download, Share2, TrendingUp, Target, Lightbulb, CheckCircle, MessageCircle, FileText, Cloud, Calendar } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

interface FormData {
  [key: string]: any;
}

interface ResultsDisplayProps {
  formData: FormData;
}

export const ResultsDisplay = ({ formData }: ResultsDisplayProps) => {
  const { toast } = useToast();

  // Mock prediction results - in real app, this would come from ML model
  const mockResults = {
    predictedYield: 4.2,
    confidence: 85,
    currentYield: 3.5,
    yieldGain: 20,
    actions: [
      {
        priority: 1,
        title: "Apply Split Nitrogen Fertilization",
        description: "Apply 40kg N/ha at tillering stage and 30kg N/ha at panicle initiation",
        reasoning: "Your soil test shows low N levels. Split application improves efficiency.",
        impact: "Expected 15% yield increase"
      },
      {
        priority: 2,
        title: "Improve Water Management",
        description: "Maintain 2-3cm water depth during reproductive stage",
        reasoning: "Critical growth stage approaching with moderate rainfall forecast.",
        impact: "Prevents 10-15% yield loss"
      },
      {
        priority: 3,
        title: "Monitor Brown Plant Hopper",
        description: "Scout weekly and apply neem-based pesticide if threshold exceeded",
        reasoning: "High pest pressure reported in your district for this season.",
        impact: "Protects against 20% potential loss"
      }
    ]
  };

  const handleDownload = () => {
    // Generate PDF report with comprehensive farm data and recommendations
    const reportData = {
      farmInfo: formData,
      recommendations: mockResults,
      timestamp: new Date().toISOString()
    };
    
    toast({
      title: "ðŸ“„ Downloading Report",
      description: "Your personalized farm advisory report is being generated (PDF format)"
    });
  };

  const handleShare = () => {
    // Format data for sharing via multiple channels
    const shareText = `ðŸŒ¾ Farm Advisory Report\n\nPredicted Yield: ${mockResults.predictedYield}t/ha\nPotential Gain: +${mockResults.yieldGain}%\n\nTop Actions:\n${mockResults.actions.map((a, i) => `${i+1}. ${a.title}`).join('\n')}\n\nGenerated by Krushi Mitra - AI Agricultural Advisory`;
    
    if (navigator.share) {
      navigator.share({
        title: 'Farm Advisory Report',
        text: shareText,
        url: window.location.href
      });
    } else {
      navigator.clipboard.writeText(shareText);
      toast({
        title: "ðŸ“± Report Copied",
        description: "Advisory report copied to clipboard. You can share it via SMS, WhatsApp, or any messaging app."
      });
    }
  };

  const handleSMSShare = () => {
    const smsText = `Krushi Mitra Advisory: Your ${formData.crop} crop can achieve ${mockResults.predictedYield}t/ha (+${mockResults.yieldGain}% gain). Priority: ${mockResults.actions[0]?.title}. Full report: ${window.location.href}`;
    window.open(`sms:?body=${encodeURIComponent(smsText)}`);
  };

  const handleWhatsAppShare = () => {
    const whatsappText = `ðŸŒ¾ *Krushi Mitra Farm Advisory*\n\n*Crop:* ${formData.crop}\n*Predicted Yield:* ${mockResults.predictedYield}t/ha\n*Potential Gain:* +${mockResults.yieldGain}%\n\n*Priority Actions:*\n${mockResults.actions.slice(0,2).map((a, i) => `${i+1}. ${a.title}`).join('\n')}\n\nView full report: ${window.location.href}`;
    window.open(`https://wa.me/?text=${encodeURIComponent(whatsappText)}`);
  };

  return (
    <div className="space-y-6">
      {/* Prediction Summary */}
      <Card className="border-success border-2">
        <CardHeader className="bg-success/5">
          <CardTitle className="flex items-center gap-2 text-success">
            <TrendingUp className="h-5 w-5" />
            Yield Prediction Results
          </CardTitle>
        </CardHeader>
        <CardContent className="pt-6">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="text-center">
              <div className="text-3xl font-bold text-primary">
                {mockResults.predictedYield} t/ha
              </div>
              <div className="text-sm text-muted-foreground">Predicted Yield</div>
              <Badge variant="secondary" className="mt-2">
                {mockResults.confidence}% confidence
              </Badge>
            </div>
            
            <div className="text-center">
              <div className="text-3xl font-bold text-earth">
                +{mockResults.yieldGain}%
              </div>
              <div className="text-sm text-muted-foreground">Potential Gain</div>
              <div className="text-xs text-muted-foreground mt-1">
                vs current: {mockResults.currentYield} t/ha
              </div>
            </div>
            
            <div className="text-center">
              <div className="text-3xl font-bold text-success">
                â‚¹{(mockResults.predictedYield * 20000).toLocaleString()}
              </div>
              <div className="text-sm text-muted-foreground">Expected Revenue</div>
              <div className="text-xs text-muted-foreground mt-1">
                @ â‚¹20,000/tonne
              </div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Priority Actions */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Target className="h-5 w-5 text-primary" />
            Priority Actions
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          {mockResults.actions.map((action, index) => (
            <Alert key={index} className="border-l-4 border-l-primary">
              <div className="flex items-start gap-3">
                <Badge variant="default" className="mt-1 font-bold">
                  {action.priority}
                </Badge>
                <div className="flex-1">
                  <h4 className="font-semibold text-primary mb-2">{action.title}</h4>
                  <AlertDescription className="mb-2">
                    {action.description}
                  </AlertDescription>
                  <div className="space-y-1 text-sm">
                    <div className="flex items-center gap-2">
                      <Lightbulb className="h-3 w-3 text-warning" />
                      <span className="text-muted-foreground">{action.reasoning}</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <CheckCircle className="h-3 w-3 text-success" />
                      <span className="font-medium text-success">{action.impact}</span>
                    </div>
                  </div>
                </div>
              </div>
            </Alert>
          ))}
        </CardContent>
      </Card>

      {/* Crop Calendar & Weather */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <Card>
          <CardHeader>
            <CardTitle className="text-lg">Next Steps Timeline</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-3">
              <div className="flex justify-between items-center">
                <span className="text-sm">Nitrogen Application</span>
                <Badge variant="outline">This Week</Badge>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-sm">Pest Monitoring</span>
                <Badge variant="outline">Weekly</Badge>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-sm">Water Management</span>
                <Badge variant="outline">Daily</Badge>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-sm">Next Assessment</span>
                <Badge variant="outline">2 Weeks</Badge>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="text-lg">Weather Forecast Impact</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-3">
              <Alert>
                <AlertDescription>
                  <strong>7-day forecast:</strong> Moderate rainfall expected (15-25mm). 
                  Good for nitrogen uptake, monitor for excess water.
                </AlertDescription>
              </Alert>
              <div className="text-sm text-muted-foreground">
                <p>â€¢ Temperature: 28-32Â°C (Optimal for rice)</p>
                <p>â€¢ Humidity: 75-85% (Monitor for fungal diseases)</p>
                <p>â€¢ Wind: Light (Good for pesticide application)</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Action Buttons */}
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
        <Button 
          onClick={handleDownload} 
          className="flex items-center gap-2"
          variant="hero"
        >
          <FileText className="h-4 w-4" />
          Download PDF
        </Button>
        <Button 
          onClick={handleWhatsAppShare} 
          variant="earth"
          className="flex items-center gap-2"
        >
          <MessageCircle className="h-4 w-4" />
          Share WhatsApp
        </Button>
        <Button 
          onClick={handleSMSShare} 
          variant="outline"
          className="flex items-center gap-2"
        >
          <MessageCircle className="h-4 w-4" />
          Send SMS
        </Button>
        <Button 
          onClick={handleShare} 
          variant="outline"
          className="flex items-center gap-2"
        >
          <Share2 className="h-4 w-4" />
          More Options
        </Button>
      </div>

      {/* Additional Info */}
      <Alert>
        <AlertDescription className="text-sm">
          <strong>Note:</strong> These recommendations are based on current data and weather forecasts. 
          Continue monitoring your crop and update information for refined advice. 
          For emergencies, contact your local agricultural extension officer.
        </AlertDescription>
      </Alert>
    </div>
  );
};